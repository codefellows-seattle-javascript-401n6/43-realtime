{"dependencies":[{"name":"/Users/BrandonBuchholz/codefellows/401/401-labs/43-realtime/brandon-lab43/package.json","includedInParent":true,"mtime":1528574409660},{"name":"/Users/BrandonBuchholz/codefellows/401/401-labs/43-realtime/brandon-lab43/.babelrc","includedInParent":true,"mtime":1528572922552},{"name":"/usr/local/lib/node_modules/parcel/node_modules/public-encrypt/package.json","includedInParent":true,"mtime":1526353038560}],"generated":{"js":"module.exports = function xor(a, b) {\n  var len = a.length;\n  var i = -1;\n  while (++i < len) {\n    a[i] ^= b[i];\n  }\n  return a\n};","map":{"mappings":[{"source":"../../../../../../../usr/local/lib/node_modules/parcel/node_modules/public-encrypt/xor.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../../../../../usr/local/lib/node_modules/parcel/node_modules/public-encrypt/xor.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../../../../../usr/local/lib/node_modules/parcel/node_modules/public-encrypt/xor.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../../../../../usr/local/lib/node_modules/parcel/node_modules/public-encrypt/xor.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../../../../../usr/local/lib/node_modules/parcel/node_modules/public-encrypt/xor.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../../../../../usr/local/lib/node_modules/parcel/node_modules/public-encrypt/xor.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../../../../../usr/local/lib/node_modules/parcel/node_modules/public-encrypt/xor.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../../../../usr/local/lib/node_modules/parcel/node_modules/public-encrypt/xor.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}}],"sources":{"../../../../../../../usr/local/lib/node_modules/parcel/node_modules/public-encrypt/xor.js":"module.exports = function xor(a, b) {\n  var len = a.length;\n  var i = -1;\n  while (++i < len) {\n    a[i] ^= b[i];\n  }\n  return a\n};"},"lineCount":8}},"hash":"bf5b039a684bdcf030ff423c7341b1b3","cacheData":{"env":{}}}