{"dependencies":[{"name":"/Users/BrandonBuchholz/codefellows/401/401-labs/43-realtime/brandon-lab43/package.json","includedInParent":true,"mtime":1528574409660},{"name":"/Users/BrandonBuchholz/codefellows/401/401-labs/43-realtime/brandon-lab43/.babelrc","includedInParent":true,"mtime":1528572922552},{"name":"/Users/BrandonBuchholz/codefellows/401/401-labs/43-realtime/brandon-lab43/node_modules/toml/package.json","includedInParent":true,"mtime":1504211194000},{"name":"./lib/parser","loc":{"line":1,"column":21}},{"name":"./lib/compiler","loc":{"line":2,"column":23}}],"generated":{"js":"var parser = require('./lib/parser');\nvar compiler = require('./lib/compiler');\n\nmodule.exports = {\n  parse: function(input) {\n    var nodes = parser.parse(input.toString());\n    return compiler.compile(nodes);\n  }\n};\n","map":{"mappings":[{"source":"node_modules/toml/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/toml/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/toml/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/toml/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/toml/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/toml/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/toml/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/toml/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/toml/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/toml/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}}],"sources":{"node_modules/toml/index.js":"var parser = require('./lib/parser');\nvar compiler = require('./lib/compiler');\n\nmodule.exports = {\n  parse: function(input) {\n    var nodes = parser.parse(input.toString());\n    return compiler.compile(nodes);\n  }\n};\n"},"lineCount":10}},"hash":"13b828affdb12a715f8f50da27ff562e","cacheData":{"env":{}}}